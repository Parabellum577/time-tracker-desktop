// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/planning should render NOT expired, NOT active and NOT outdated planning 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Planning
    bookmarks={Array []}
    planning={
      Object {
        "Active": false,
        "ActivityID": 0,
        "CloseComment": "string",
        "ClosedAt": 0,
        "ColdPlanningID": 0,
        "CreatedAt": 0,
        "Estimation": 3600,
        "FinishState": Array [],
        "ID": 0,
        "IsColdPlanning": true,
        "IsManual": true,
        "IssueDone": 0,
        "IssueDueDate": 0,
        "IssueEstimation": 0,
        "IssueID": "string",
        "IssueSpent": 0,
        "IssueState": Array [],
        "IssueTitle": "string",
        "IssueURL": "string",
        "OpenComment": "string",
        "Outdated": false,
        "PlanningDone": true,
        "ProjectID": "string",
        "Reported": 0,
        "SpentManual": 0,
        "SpentOffline": 0,
        "SpentOnline": 0,
        "StartedBy": "string",
        "Status": "OPEN",
        "TrackerID": 0,
      }
    }
    startPlanning={[MockFunction]}
    userTrackers={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="block"
        >
          <div
            className="activateButton"
            onClick={[Function]}
          >
            <IconWrapper
              classes="playPauseIcon notOutdatedIcon"
              name="playIcon"
            />
          </div>
          <div
            className="content"
          >
            <div
              className="information"
            >
              <div>
                <div
                  className="title"
                  onClick={[Function]}
                >
                  <IconWrapper
                    classes="integrationIcon"
                    name="noIcon"
                  />
                  <span>
                    string
                  </span>
                </div>
                <div
                  className="subtitle"
                >
                  <IconWrapper
                    classes="star"
                    name="star"
                    onClick={[Function]}
                  />
                  <span>
                    string
                  </span>
                  <IconWrapper
                    classes="dot"
                    name="fiber_manual_record"
                  />
                  <span>
                    string
                  </span>
                </div>
              </div>
              <div
                className="fullTime"
              >
                <div
                  className="estimBlock"
                >
                  <React.Fragment>
                    <React.Fragment>
                      <React.Fragment>
                        <p>
                          Estimate: 
                          0m
                        </p>
                        <p>
                          Planned: 
                          1.0h
                        </p>
                      </React.Fragment>
                      <p
                        className="spentTime"
                      >
                        0:0
                      </p>
                    </React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </div>
          <div
            className="menu"
          >
            <React.Fragment>
              <WithStyles(Menu)
                PaperProps={
                  Object {
                    "style": Object {
                      "marginTop": 25,
                      "width": 160,
                    },
                  }
                }
                anchorEl={null}
                id="0-menu"
                onClose={[Function]}
                open={false}
              >
                <WithStyles(MenuItem)
                  className="menuItem"
                  onClick={[Function]}
                  selected={false}
                >
                  <span
                    className=""
                  >
                    Edit
                  </span>
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  className="menuItem"
                  onClick={[Function]}
                  selected={false}
                >
                  <span>
                    Report
                  </span>
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  className="menuItem"
                  onClick={[Function]}
                  selected={false}
                >
                  <span
                    className=""
                  >
                    Remove
                  </span>
                </WithStyles(MenuItem)>
              </WithStyles(Menu)>
            </React.Fragment>
            <IconWrapper
              classes="dotsIcon"
              name="dotsIcon"
              onClick={[Function]}
            />
            <div
              className="reportBlock"
            >
              <IconWrapper
                classes="reportIcon"
                name="check"
                onClick={[Function]}
              />
            </div>
          </div>
        </div>,
        <div
          className="progressBar"
        >
          <div
            className="value"
            style={
              Object {
                "width": "0%",
              }
            }
          />
        </div>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="activateButton"
              onClick={[Function]}
            >
              <IconWrapper
                classes="playPauseIcon notOutdatedIcon"
                name="playIcon"
              />
            </div>,
            <div
              className="content"
            >
              <div
                className="information"
              >
                <div>
                  <div
                    className="title"
                    onClick={[Function]}
                  >
                    <IconWrapper
                      classes="integrationIcon"
                      name="noIcon"
                    />
                    <span>
                      string
                    </span>
                  </div>
                  <div
                    className="subtitle"
                  >
                    <IconWrapper
                      classes="star"
                      name="star"
                      onClick={[Function]}
                    />
                    <span>
                      string
                    </span>
                    <IconWrapper
                      classes="dot"
                      name="fiber_manual_record"
                    />
                    <span>
                      string
                    </span>
                  </div>
                </div>
                <div
                  className="fullTime"
                >
                  <div
                    className="estimBlock"
                  >
                    <React.Fragment>
                      <React.Fragment>
                        <React.Fragment>
                          <p>
                            Estimate: 
                            0m
                          </p>
                          <p>
                            Planned: 
                            1.0h
                          </p>
                        </React.Fragment>
                        <p
                          className="spentTime"
                        >
                          0:0
                        </p>
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>,
            <div
              className="menu"
            >
              <React.Fragment>
                <WithStyles(Menu)
                  PaperProps={
                    Object {
                      "style": Object {
                        "marginTop": 25,
                        "width": 160,
                      },
                    }
                  }
                  anchorEl={null}
                  id="0-menu"
                  onClose={[Function]}
                  open={false}
                >
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Edit
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span>
                      Report
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Remove
                    </span>
                  </WithStyles(MenuItem)>
                </WithStyles(Menu)>
              </React.Fragment>
              <IconWrapper
                classes="dotsIcon"
                name="dotsIcon"
                onClick={[Function]}
              />
              <div
                className="reportBlock"
              >
                <IconWrapper
                  classes="reportIcon"
                  name="check"
                  onClick={[Function]}
                />
              </div>
            </div>,
            false,
            false,
            false,
          ],
          "className": "block",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <IconWrapper
                classes="playPauseIcon notOutdatedIcon"
                name="playIcon"
              />,
              "className": "activateButton",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": "planning-false",
              "nodeType": "class",
              "props": Object {
                "classes": "playPauseIcon notOutdatedIcon",
                "name": "playIcon",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="information"
              >
                <div>
                  <div
                    className="title"
                    onClick={[Function]}
                  >
                    <IconWrapper
                      classes="integrationIcon"
                      name="noIcon"
                    />
                    <span>
                      string
                    </span>
                  </div>
                  <div
                    className="subtitle"
                  >
                    <IconWrapper
                      classes="star"
                      name="star"
                      onClick={[Function]}
                    />
                    <span>
                      string
                    </span>
                    <IconWrapper
                      classes="dot"
                      name="fiber_manual_record"
                    />
                    <span>
                      string
                    </span>
                  </div>
                </div>
                <div
                  className="fullTime"
                >
                  <div
                    className="estimBlock"
                  >
                    <React.Fragment>
                      <React.Fragment>
                        <React.Fragment>
                          <p>
                            Estimate: 
                            0m
                          </p>
                          <p>
                            Planned: 
                            1.0h
                          </p>
                        </React.Fragment>
                        <p
                          className="spentTime"
                        >
                          0:0
                        </p>
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>,
              "className": "content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>,
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>,
                ],
                "className": "information",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="title"
                        onClick={[Function]}
                      >
                        <IconWrapper
                          classes="integrationIcon"
                          name="noIcon"
                        />
                        <span>
                          string
                        </span>
                      </div>,
                      <div
                        className="subtitle"
                      >
                        <IconWrapper
                          classes="star"
                          name="star"
                          onClick={[Function]}
                        />
                        <span>
                          string
                        </span>
                        <IconWrapper
                          classes="dot"
                          name="fiber_manual_record"
                        />
                        <span>
                          string
                        </span>
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <IconWrapper
                            classes="integrationIcon"
                            name="noIcon"
                          />,
                          <span>
                            string
                          </span>,
                        ],
                        "className": "title",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "integrationIcon",
                            "name": "noIcon",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "string",
                          },
                          "ref": null,
                          "rendered": "string",
                          "type": "span",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <IconWrapper
                            classes="star"
                            name="star"
                            onClick={[Function]}
                          />,
                          <span>
                            string
                          </span>,
                          <IconWrapper
                            classes="dot"
                            name="fiber_manual_record"
                          />,
                          <span>
                            string
                          </span>,
                        ],
                        "className": "subtitle",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "star",
                            "name": "star",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "string",
                          },
                          "ref": null,
                          "rendered": "string",
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "dot",
                            "name": "fiber_manual_record",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "string",
                          },
                          "ref": null,
                          "rendered": "string",
                          "type": "span",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>,
                    "className": "fullTime",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>,
                      "className": "estimBlock",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>,
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": Array [
                                <p>
                                  Estimate: 
                                  0m
                                </p>,
                                <p>
                                  Planned: 
                                  1.0h
                                </p>,
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": Array [
                                    "Estimate: ",
                                    "0m",
                                  ],
                                },
                                "ref": null,
                                "rendered": Array [
                                  "Estimate: ",
                                  "0m",
                                ],
                                "type": "p",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": Array [
                                    "Planned: ",
                                    "1.0h",
                                  ],
                                },
                                "ref": null,
                                "rendered": Array [
                                  "Planned: ",
                                  "1.0h",
                                ],
                                "type": "p",
                              },
                            ],
                            "type": Symbol(react.fragment),
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "0:0",
                              "className": "spentTime",
                            },
                            "ref": null,
                            "rendered": "0:0",
                            "type": "p",
                          },
                        ],
                        "type": Symbol(react.fragment),
                      },
                      "type": Symbol(react.fragment),
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <React.Fragment>
                  <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>
                </React.Fragment>,
                <IconWrapper
                  classes="dotsIcon"
                  name="dotsIcon"
                  onClick={[Function]}
                />,
                <div
                  className="reportBlock"
                >
                  <IconWrapper
                    classes="reportIcon"
                    name="check"
                    onClick={[Function]}
                  />
                </div>,
              ],
              "className": "menu",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "PaperProps": Object {
                      "style": Object {
                        "marginTop": 25,
                        "width": 160,
                      },
                    },
                    "anchorEl": null,
                    "children": Array [
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>,
                    ],
                    "id": "0-menu",
                    "onClose": [Function],
                    "open": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "edit",
                      "nodeType": "class",
                      "props": Object {
                        "children": <span
                          className=""
                        >
                          Edit
                        </span>,
                        "className": "menuItem",
                        "onClick": [Function],
                        "selected": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Edit",
                          "className": "",
                        },
                        "ref": null,
                        "rendered": "Edit",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "report",
                      "nodeType": "class",
                      "props": Object {
                        "children": <span>
                          Report
                        </span>,
                        "className": "menuItem",
                        "onClick": [Function],
                        "selected": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Report",
                        },
                        "ref": null,
                        "rendered": "Report",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "remove",
                      "nodeType": "class",
                      "props": Object {
                        "children": <span
                          className=""
                        >
                          Remove
                        </span>,
                        "className": "menuItem",
                        "onClick": [Function],
                        "selected": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Remove",
                          "className": "",
                        },
                        "ref": null,
                        "rendered": "Remove",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": Symbol(react.fragment),
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "classes": "dotsIcon",
                  "name": "dotsIcon",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <IconWrapper
                      classes="reportIcon"
                      name="check"
                      onClick={[Function]}
                    />,
                    false,
                  ],
                  "className": "reportBlock",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "classes": "reportIcon",
                      "name": "check",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  false,
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          false,
          false,
          false,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="value"
            style={
              Object {
                "width": "0%",
              }
            }
          />,
          "className": "progressBar",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "value",
            "style": Object {
              "width": "0%",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="block"
          >
            <div
              className="activateButton"
              onClick={[Function]}
            >
              <IconWrapper
                classes="playPauseIcon notOutdatedIcon"
                name="playIcon"
              />
            </div>
            <div
              className="content"
            >
              <div
                className="information"
              >
                <div>
                  <div
                    className="title"
                    onClick={[Function]}
                  >
                    <IconWrapper
                      classes="integrationIcon"
                      name="noIcon"
                    />
                    <span>
                      string
                    </span>
                  </div>
                  <div
                    className="subtitle"
                  >
                    <IconWrapper
                      classes="star"
                      name="star"
                      onClick={[Function]}
                    />
                    <span>
                      string
                    </span>
                    <IconWrapper
                      classes="dot"
                      name="fiber_manual_record"
                    />
                    <span>
                      string
                    </span>
                  </div>
                </div>
                <div
                  className="fullTime"
                >
                  <div
                    className="estimBlock"
                  >
                    <React.Fragment>
                      <React.Fragment>
                        <React.Fragment>
                          <p>
                            Estimate: 
                            0m
                          </p>
                          <p>
                            Planned: 
                            1.0h
                          </p>
                        </React.Fragment>
                        <p
                          className="spentTime"
                        >
                          0:0
                        </p>
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="menu"
            >
              <React.Fragment>
                <WithStyles(Menu)
                  PaperProps={
                    Object {
                      "style": Object {
                        "marginTop": 25,
                        "width": 160,
                      },
                    }
                  }
                  anchorEl={null}
                  id="0-menu"
                  onClose={[Function]}
                  open={false}
                >
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Edit
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span>
                      Report
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Remove
                    </span>
                  </WithStyles(MenuItem)>
                </WithStyles(Menu)>
              </React.Fragment>
              <IconWrapper
                classes="dotsIcon"
                name="dotsIcon"
                onClick={[Function]}
              />
              <div
                className="reportBlock"
              >
                <IconWrapper
                  classes="reportIcon"
                  name="check"
                  onClick={[Function]}
                />
              </div>
            </div>
          </div>,
          <div
            className="progressBar"
          >
            <div
              className="value"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="activateButton"
                onClick={[Function]}
              >
                <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />
              </div>,
              <div
                className="content"
              >
                <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              </div>,
              <div
                className="menu"
              >
                <React.Fragment>
                  <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>
                </React.Fragment>
                <IconWrapper
                  classes="dotsIcon"
                  name="dotsIcon"
                  onClick={[Function]}
                />
                <div
                  className="reportBlock"
                >
                  <IconWrapper
                    classes="reportIcon"
                    name="check"
                    onClick={[Function]}
                  />
                </div>
              </div>,
              false,
              false,
              false,
            ],
            "className": "block",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />,
                "className": "activateButton",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "planning-false",
                "nodeType": "class",
                "props": Object {
                  "classes": "playPauseIcon notOutdatedIcon",
                  "name": "playIcon",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>,
                "className": "content",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      <div
                        className="title"
                        onClick={[Function]}
                      >
                        <IconWrapper
                          classes="integrationIcon"
                          name="noIcon"
                        />
                        <span>
                          string
                        </span>
                      </div>
                      <div
                        className="subtitle"
                      >
                        <IconWrapper
                          classes="star"
                          name="star"
                          onClick={[Function]}
                        />
                        <span>
                          string
                        </span>
                        <IconWrapper
                          classes="dot"
                          name="fiber_manual_record"
                        />
                        <span>
                          string
                        </span>
                      </div>
                    </div>,
                    <div
                      className="fullTime"
                    >
                      <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>,
                  ],
                  "className": "information",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="title"
                          onClick={[Function]}
                        >
                          <IconWrapper
                            classes="integrationIcon"
                            name="noIcon"
                          />
                          <span>
                            string
                          </span>
                        </div>,
                        <div
                          className="subtitle"
                        >
                          <IconWrapper
                            classes="star"
                            name="star"
                            onClick={[Function]}
                          />
                          <span>
                            string
                          </span>
                          <IconWrapper
                            classes="dot"
                            name="fiber_manual_record"
                          />
                          <span>
                            string
                          </span>
                        </div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <IconWrapper
                              classes="integrationIcon"
                              name="noIcon"
                            />,
                            <span>
                              string
                            </span>,
                          ],
                          "className": "title",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "integrationIcon",
                              "name": "noIcon",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <IconWrapper
                              classes="star"
                              name="star"
                              onClick={[Function]}
                            />,
                            <span>
                              string
                            </span>,
                            <IconWrapper
                              classes="dot"
                              name="fiber_manual_record"
                            />,
                            <span>
                              string
                            </span>,
                          ],
                          "className": "subtitle",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "star",
                              "name": "star",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "dot",
                              "name": "fiber_manual_record",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>,
                      "className": "fullTime",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>,
                        "className": "estimBlock",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": Array [
                              <React.Fragment>
                                <p>
                                  Estimate: 
                                  0m
                                </p>
                                <p>
                                  Planned: 
                                  1.0h
                                </p>
                              </React.Fragment>,
                              <p
                                className="spentTime"
                              >
                                0:0
                              </p>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": Array [
                                  <p>
                                    Estimate: 
                                    0m
                                  </p>,
                                  <p>
                                    Planned: 
                                    1.0h
                                  </p>,
                                ],
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": Array [
                                      "Estimate: ",
                                      "0m",
                                    ],
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "Estimate: ",
                                    "0m",
                                  ],
                                  "type": "p",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": Array [
                                      "Planned: ",
                                      "1.0h",
                                    ],
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "Planned: ",
                                    "1.0h",
                                  ],
                                  "type": "p",
                                },
                              ],
                              "type": Symbol(react.fragment),
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "0:0",
                                "className": "spentTime",
                              },
                              "ref": null,
                              "rendered": "0:0",
                              "type": "p",
                            },
                          ],
                          "type": Symbol(react.fragment),
                        },
                        "type": Symbol(react.fragment),
                      },
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <React.Fragment>
                    <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>
                  </React.Fragment>,
                  <IconWrapper
                    classes="dotsIcon"
                    name="dotsIcon"
                    onClick={[Function]}
                  />,
                  <div
                    className="reportBlock"
                  >
                    <IconWrapper
                      classes="reportIcon"
                      name="check"
                      onClick={[Function]}
                    />
                  </div>,
                ],
                "className": "menu",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "PaperProps": Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      },
                      "anchorEl": null,
                      "children": Array [
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Edit
                          </span>
                        </WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span>
                            Report
                          </span>
                        </WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Remove
                          </span>
                        </WithStyles(MenuItem)>,
                      ],
                      "id": "0-menu",
                      "onClose": [Function],
                      "open": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "edit",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span
                            className=""
                          >
                            Edit
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Edit",
                            "className": "",
                          },
                          "ref": null,
                          "rendered": "Edit",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "report",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span>
                            Report
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Report",
                          },
                          "ref": null,
                          "rendered": "Report",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "remove",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span
                            className=""
                          >
                            Remove
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Remove",
                            "className": "",
                          },
                          "ref": null,
                          "rendered": "Remove",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": Symbol(react.fragment),
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "classes": "dotsIcon",
                    "name": "dotsIcon",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <IconWrapper
                        classes="reportIcon"
                        name="check"
                        onClick={[Function]}
                      />,
                      false,
                    ],
                    "className": "reportBlock",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "classes": "reportIcon",
                        "name": "check",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    false,
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            false,
            false,
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="value"
              style={
                Object {
                  "width": "0%",
                }
              }
            />,
            "className": "progressBar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "value",
              "style": Object {
                "width": "0%",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`components/planning should render NOT expired, NOT active and NOT outdated planning 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): ShallowWrapper {
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <Planning
      bookmarks={Array []}
      planning={
        Object {
          "Active": false,
          "ActivityID": 0,
          "CloseComment": "string",
          "ClosedAt": 0,
          "ColdPlanningID": 0,
          "CreatedAt": 0,
          "Estimation": 3600,
          "FinishState": Array [],
          "ID": 0,
          "IsColdPlanning": true,
          "IsManual": true,
          "IssueDone": 0,
          "IssueDueDate": 0,
          "IssueEstimation": 0,
          "IssueID": "string",
          "IssueSpent": 0,
          "IssueState": Array [],
          "IssueTitle": "string",
          "IssueURL": "string",
          "OpenComment": "string",
          "Outdated": false,
          "PlanningDone": true,
          "ProjectID": "string",
          "Reported": 0,
          "SpentManual": 0,
          "SpentOffline": 0,
          "SpentOnline": 0,
          "StartedBy": "string",
          "Status": "OPEN",
          "TrackerID": 0,
        }
      }
      startPlanning={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "PlanningID": 0,
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      userTrackers={Array []}
    />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "checkPropTypes": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateError": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="block"
          >
            <div
              className="activateButton"
              onClick={[Function]}
            >
              <IconWrapper
                classes="playPauseIcon notOutdatedIcon"
                name="playIcon"
              />
            </div>
            <div
              className="content"
            >
              <div
                className="information"
              >
                <div>
                  <div
                    className="title"
                    onClick={[Function]}
                  >
                    <IconWrapper
                      classes="integrationIcon"
                      name="noIcon"
                    />
                    <span>
                      string
                    </span>
                  </div>
                  <div
                    className="subtitle"
                  >
                    <IconWrapper
                      classes="star"
                      name="star"
                      onClick={[Function]}
                    />
                    <span>
                      string
                    </span>
                    <IconWrapper
                      classes="dot"
                      name="fiber_manual_record"
                    />
                    <span>
                      string
                    </span>
                  </div>
                </div>
                <div
                  className="fullTime"
                >
                  <div
                    className="estimBlock"
                  >
                    <React.Fragment>
                      <React.Fragment>
                        <React.Fragment>
                          <p>
                            Estimate: 
                            0m
                          </p>
                          <p>
                            Planned: 
                            1.0h
                          </p>
                        </React.Fragment>
                        <p
                          className="spentTime"
                        >
                          0:0
                        </p>
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="menu"
            >
              <React.Fragment>
                <WithStyles(Menu)
                  PaperProps={
                    Object {
                      "style": Object {
                        "marginTop": 25,
                        "width": 160,
                      },
                    }
                  }
                  anchorEl={null}
                  id="0-menu"
                  onClose={[Function]}
                  open={false}
                >
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Edit
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span>
                      Report
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Remove
                    </span>
                  </WithStyles(MenuItem)>
                </WithStyles(Menu)>
              </React.Fragment>
              <IconWrapper
                classes="dotsIcon"
                name="dotsIcon"
                onClick={[Function]}
              />
              <div
                className="reportBlock"
              >
                <IconWrapper
                  classes="reportIcon"
                  name="check"
                  onClick={[Function]}
                />
              </div>
            </div>
          </div>,
          <div
            className="progressBar"
          >
            <div
              className="value"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="activateButton"
                onClick={[Function]}
              >
                <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />
              </div>,
              <div
                className="content"
              >
                <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              </div>,
              <div
                className="menu"
              >
                <React.Fragment>
                  <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>
                </React.Fragment>
                <IconWrapper
                  classes="dotsIcon"
                  name="dotsIcon"
                  onClick={[Function]}
                />
                <div
                  className="reportBlock"
                >
                  <IconWrapper
                    classes="reportIcon"
                    name="check"
                    onClick={[Function]}
                  />
                </div>
              </div>,
              false,
              false,
              false,
            ],
            "className": "block",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />,
                "className": "activateButton",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "planning-false",
                "nodeType": "class",
                "props": Object {
                  "classes": "playPauseIcon notOutdatedIcon",
                  "name": "playIcon",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>,
                "className": "content",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      <div
                        className="title"
                        onClick={[Function]}
                      >
                        <IconWrapper
                          classes="integrationIcon"
                          name="noIcon"
                        />
                        <span>
                          string
                        </span>
                      </div>
                      <div
                        className="subtitle"
                      >
                        <IconWrapper
                          classes="star"
                          name="star"
                          onClick={[Function]}
                        />
                        <span>
                          string
                        </span>
                        <IconWrapper
                          classes="dot"
                          name="fiber_manual_record"
                        />
                        <span>
                          string
                        </span>
                      </div>
                    </div>,
                    <div
                      className="fullTime"
                    >
                      <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>,
                  ],
                  "className": "information",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="title"
                          onClick={[Function]}
                        >
                          <IconWrapper
                            classes="integrationIcon"
                            name="noIcon"
                          />
                          <span>
                            string
                          </span>
                        </div>,
                        <div
                          className="subtitle"
                        >
                          <IconWrapper
                            classes="star"
                            name="star"
                            onClick={[Function]}
                          />
                          <span>
                            string
                          </span>
                          <IconWrapper
                            classes="dot"
                            name="fiber_manual_record"
                          />
                          <span>
                            string
                          </span>
                        </div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <IconWrapper
                              classes="integrationIcon"
                              name="noIcon"
                            />,
                            <span>
                              string
                            </span>,
                          ],
                          "className": "title",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "integrationIcon",
                              "name": "noIcon",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <IconWrapper
                              classes="star"
                              name="star"
                              onClick={[Function]}
                            />,
                            <span>
                              string
                            </span>,
                            <IconWrapper
                              classes="dot"
                              name="fiber_manual_record"
                            />,
                            <span>
                              string
                            </span>,
                          ],
                          "className": "subtitle",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "star",
                              "name": "star",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "dot",
                              "name": "fiber_manual_record",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>,
                      "className": "fullTime",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>,
                        "className": "estimBlock",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": Array [
                              <React.Fragment>
                                <p>
                                  Estimate: 
                                  0m
                                </p>
                                <p>
                                  Planned: 
                                  1.0h
                                </p>
                              </React.Fragment>,
                              <p
                                className="spentTime"
                              >
                                0:0
                              </p>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": Array [
                                  <p>
                                    Estimate: 
                                    0m
                                  </p>,
                                  <p>
                                    Planned: 
                                    1.0h
                                  </p>,
                                ],
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": Array [
                                      "Estimate: ",
                                      "0m",
                                    ],
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "Estimate: ",
                                    "0m",
                                  ],
                                  "type": "p",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": Array [
                                      "Planned: ",
                                      "1.0h",
                                    ],
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "Planned: ",
                                    "1.0h",
                                  ],
                                  "type": "p",
                                },
                              ],
                              "type": Symbol(react.fragment),
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "0:0",
                                "className": "spentTime",
                              },
                              "ref": null,
                              "rendered": "0:0",
                              "type": "p",
                            },
                          ],
                          "type": Symbol(react.fragment),
                        },
                        "type": Symbol(react.fragment),
                      },
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <React.Fragment>
                    <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>
                  </React.Fragment>,
                  <IconWrapper
                    classes="dotsIcon"
                    name="dotsIcon"
                    onClick={[Function]}
                  />,
                  <div
                    className="reportBlock"
                  >
                    <IconWrapper
                      classes="reportIcon"
                      name="check"
                      onClick={[Function]}
                    />
                  </div>,
                ],
                "className": "menu",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "PaperProps": Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      },
                      "anchorEl": null,
                      "children": Array [
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Edit
                          </span>
                        </WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span>
                            Report
                          </span>
                        </WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Remove
                          </span>
                        </WithStyles(MenuItem)>,
                      ],
                      "id": "0-menu",
                      "onClose": [Function],
                      "open": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "edit",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span
                            className=""
                          >
                            Edit
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Edit",
                            "className": "",
                          },
                          "ref": null,
                          "rendered": "Edit",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "report",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span>
                            Report
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Report",
                          },
                          "ref": null,
                          "rendered": "Report",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "remove",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span
                            className=""
                          >
                            Remove
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Remove",
                            "className": "",
                          },
                          "ref": null,
                          "rendered": "Remove",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": Symbol(react.fragment),
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "classes": "dotsIcon",
                    "name": "dotsIcon",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <IconWrapper
                        classes="reportIcon"
                        name="check"
                        onClick={[Function]}
                      />,
                      false,
                    ],
                    "className": "reportBlock",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "classes": "reportIcon",
                        "name": "check",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    false,
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            false,
            false,
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="value"
              style={
                Object {
                  "width": "0%",
                }
              }
            />,
            "className": "progressBar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "value",
              "style": Object {
                "width": "0%",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="block"
            >
              <div
                className="activateButton"
                onClick={[Function]}
              >
                <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />
              </div>
              <div
                className="content"
              >
                <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="menu"
              >
                <React.Fragment>
                  <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>
                </React.Fragment>
                <IconWrapper
                  classes="dotsIcon"
                  name="dotsIcon"
                  onClick={[Function]}
                />
                <div
                  className="reportBlock"
                >
                  <IconWrapper
                    classes="reportIcon"
                    name="check"
                    onClick={[Function]}
                  />
                </div>
              </div>
            </div>,
            <div
              className="progressBar"
            >
              <div
                className="value"
                style={
                  Object {
                    "width": "0%",
                  }
                }
              />
            </div>,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="activateButton"
                  onClick={[Function]}
                >
                  <IconWrapper
                    classes="playPauseIcon notOutdatedIcon"
                    name="playIcon"
                  />
                </div>,
                <div
                  className="content"
                >
                  <div
                    className="information"
                  >
                    <div>
                      <div
                        className="title"
                        onClick={[Function]}
                      >
                        <IconWrapper
                          classes="integrationIcon"
                          name="noIcon"
                        />
                        <span>
                          string
                        </span>
                      </div>
                      <div
                        className="subtitle"
                      >
                        <IconWrapper
                          classes="star"
                          name="star"
                          onClick={[Function]}
                        />
                        <span>
                          string
                        </span>
                        <IconWrapper
                          classes="dot"
                          name="fiber_manual_record"
                        />
                        <span>
                          string
                        </span>
                      </div>
                    </div>
                    <div
                      className="fullTime"
                    >
                      <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                </div>,
                <div
                  className="menu"
                >
                  <React.Fragment>
                    <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>
                  </React.Fragment>
                  <IconWrapper
                    classes="dotsIcon"
                    name="dotsIcon"
                    onClick={[Function]}
                  />
                  <div
                    className="reportBlock"
                  >
                    <IconWrapper
                      classes="reportIcon"
                      name="check"
                      onClick={[Function]}
                    />
                  </div>
                </div>,
                false,
                false,
                false,
              ],
              "className": "block",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <IconWrapper
                    classes="playPauseIcon notOutdatedIcon"
                    name="playIcon"
                  />,
                  "className": "activateButton",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "planning-false",
                  "nodeType": "class",
                  "props": Object {
                    "classes": "playPauseIcon notOutdatedIcon",
                    "name": "playIcon",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="information"
                  >
                    <div>
                      <div
                        className="title"
                        onClick={[Function]}
                      >
                        <IconWrapper
                          classes="integrationIcon"
                          name="noIcon"
                        />
                        <span>
                          string
                        </span>
                      </div>
                      <div
                        className="subtitle"
                      >
                        <IconWrapper
                          classes="star"
                          name="star"
                          onClick={[Function]}
                        />
                        <span>
                          string
                        </span>
                        <IconWrapper
                          classes="dot"
                          name="fiber_manual_record"
                        />
                        <span>
                          string
                        </span>
                      </div>
                    </div>
                    <div
                      className="fullTime"
                    >
                      <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>,
                  "className": "content",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div>
                        <div
                          className="title"
                          onClick={[Function]}
                        >
                          <IconWrapper
                            classes="integrationIcon"
                            name="noIcon"
                          />
                          <span>
                            string
                          </span>
                        </div>
                        <div
                          className="subtitle"
                        >
                          <IconWrapper
                            classes="star"
                            name="star"
                            onClick={[Function]}
                          />
                          <span>
                            string
                          </span>
                          <IconWrapper
                            classes="dot"
                            name="fiber_manual_record"
                          />
                          <span>
                            string
                          </span>
                        </div>
                      </div>,
                      <div
                        className="fullTime"
                      >
                        <div
                          className="estimBlock"
                        >
                          <React.Fragment>
                            <React.Fragment>
                              <React.Fragment>
                                <p>
                                  Estimate: 
                                  0m
                                </p>
                                <p>
                                  Planned: 
                                  1.0h
                                </p>
                              </React.Fragment>
                              <p
                                className="spentTime"
                              >
                                0:0
                              </p>
                            </React.Fragment>
                          </React.Fragment>
                        </div>
                      </div>,
                    ],
                    "className": "information",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <div
                            className="title"
                            onClick={[Function]}
                          >
                            <IconWrapper
                              classes="integrationIcon"
                              name="noIcon"
                            />
                            <span>
                              string
                            </span>
                          </div>,
                          <div
                            className="subtitle"
                          >
                            <IconWrapper
                              classes="star"
                              name="star"
                              onClick={[Function]}
                            />
                            <span>
                              string
                            </span>
                            <IconWrapper
                              classes="dot"
                              name="fiber_manual_record"
                            />
                            <span>
                              string
                            </span>
                          </div>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <IconWrapper
                                classes="integrationIcon"
                                name="noIcon"
                              />,
                              <span>
                                string
                              </span>,
                            ],
                            "className": "title",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "classes": "integrationIcon",
                                "name": "noIcon",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "string",
                              },
                              "ref": null,
                              "rendered": "string",
                              "type": "span",
                            },
                          ],
                          "type": "div",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <IconWrapper
                                classes="star"
                                name="star"
                                onClick={[Function]}
                              />,
                              <span>
                                string
                              </span>,
                              <IconWrapper
                                classes="dot"
                                name="fiber_manual_record"
                              />,
                              <span>
                                string
                              </span>,
                            ],
                            "className": "subtitle",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "classes": "star",
                                "name": "star",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "string",
                              },
                              "ref": null,
                              "rendered": "string",
                              "type": "span",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "classes": "dot",
                                "name": "fiber_manual_record",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "string",
                              },
                              "ref": null,
                              "rendered": "string",
                              "type": "span",
                            },
                          ],
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <div
                          className="estimBlock"
                        >
                          <React.Fragment>
                            <React.Fragment>
                              <React.Fragment>
                                <p>
                                  Estimate: 
                                  0m
                                </p>
                                <p>
                                  Planned: 
                                  1.0h
                                </p>
                              </React.Fragment>
                              <p
                                className="spentTime"
                              >
                                0:0
                              </p>
                            </React.Fragment>
                          </React.Fragment>
                        </div>,
                        "className": "fullTime",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <React.Fragment>
                            <React.Fragment>
                              <React.Fragment>
                                <p>
                                  Estimate: 
                                  0m
                                </p>
                                <p>
                                  Planned: 
                                  1.0h
                                </p>
                              </React.Fragment>
                              <p
                                className="spentTime"
                              >
                                0:0
                              </p>
                            </React.Fragment>
                          </React.Fragment>,
                          "className": "estimBlock",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <React.Fragment>
                              <React.Fragment>
                                <p>
                                  Estimate: 
                                  0m
                                </p>
                                <p>
                                  Planned: 
                                  1.0h
                                </p>
                              </React.Fragment>
                              <p
                                className="spentTime"
                              >
                                0:0
                              </p>
                            </React.Fragment>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": Array [
                                <React.Fragment>
                                  <p>
                                    Estimate: 
                                    0m
                                  </p>
                                  <p>
                                    Planned: 
                                    1.0h
                                  </p>
                                </React.Fragment>,
                                <p
                                  className="spentTime"
                                >
                                  0:0
                                </p>,
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "children": Array [
                                    <p>
                                      Estimate: 
                                      0m
                                    </p>,
                                    <p>
                                      Planned: 
                                      1.0h
                                    </p>,
                                  ],
                                },
                                "ref": null,
                                "rendered": Array [
                                  Object {
                                    "instance": null,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": Array [
                                        "Estimate: ",
                                        "0m",
                                      ],
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "Estimate: ",
                                      "0m",
                                    ],
                                    "type": "p",
                                  },
                                  Object {
                                    "instance": null,
                                    "key": undefined,
                                    "nodeType": "host",
                                    "props": Object {
                                      "children": Array [
                                        "Planned: ",
                                        "1.0h",
                                      ],
                                    },
                                    "ref": null,
                                    "rendered": Array [
                                      "Planned: ",
                                      "1.0h",
                                    ],
                                    "type": "p",
                                  },
                                ],
                                "type": Symbol(react.fragment),
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "0:0",
                                  "className": "spentTime",
                                },
                                "ref": null,
                                "rendered": "0:0",
                                "type": "p",
                              },
                            ],
                            "type": Symbol(react.fragment),
                          },
                          "type": Symbol(react.fragment),
                        },
                        "type": "div",
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <React.Fragment>
                      <WithStyles(Menu)
                        PaperProps={
                          Object {
                            "style": Object {
                              "marginTop": 25,
                              "width": 160,
                            },
                          }
                        }
                        anchorEl={null}
                        id="0-menu"
                        onClose={[Function]}
                        open={false}
                      >
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Edit
                          </span>
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span>
                            Report
                          </span>
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Remove
                          </span>
                        </WithStyles(MenuItem)>
                      </WithStyles(Menu)>
                    </React.Fragment>,
                    <IconWrapper
                      classes="dotsIcon"
                      name="dotsIcon"
                      onClick={[Function]}
                    />,
                    <div
                      className="reportBlock"
                    >
                      <IconWrapper
                        classes="reportIcon"
                        name="check"
                        onClick={[Function]}
                      />
                    </div>,
                  ],
                  "className": "menu",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <WithStyles(Menu)
                        PaperProps={
                          Object {
                            "style": Object {
                              "marginTop": 25,
                              "width": 160,
                            },
                          }
                        }
                        anchorEl={null}
                        id="0-menu"
                        onClose={[Function]}
                        open={false}
                      >
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Edit
                          </span>
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span>
                            Report
                          </span>
                        </WithStyles(MenuItem)>
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Remove
                          </span>
                        </WithStyles(MenuItem)>
                      </WithStyles(Menu)>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "PaperProps": Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        },
                        "anchorEl": null,
                        "children": Array [
                          <WithStyles(MenuItem)
                            className="menuItem"
                            onClick={[Function]}
                            selected={false}
                          >
                            <span
                              className=""
                            >
                              Edit
                            </span>
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            className="menuItem"
                            onClick={[Function]}
                            selected={false}
                          >
                            <span>
                              Report
                            </span>
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            className="menuItem"
                            onClick={[Function]}
                            selected={false}
                          >
                            <span
                              className=""
                            >
                              Remove
                            </span>
                          </WithStyles(MenuItem)>,
                        ],
                        "id": "0-menu",
                        "onClose": [Function],
                        "open": false,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "edit",
                          "nodeType": "class",
                          "props": Object {
                            "children": <span
                              className=""
                            >
                              Edit
                            </span>,
                            "className": "menuItem",
                            "onClick": [Function],
                            "selected": false,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Edit",
                              "className": "",
                            },
                            "ref": null,
                            "rendered": "Edit",
                            "type": "span",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "report",
                          "nodeType": "class",
                          "props": Object {
                            "children": <span>
                              Report
                            </span>,
                            "className": "menuItem",
                            "onClick": [Function],
                            "selected": false,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Report",
                            },
                            "ref": null,
                            "rendered": "Report",
                            "type": "span",
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "remove",
                          "nodeType": "class",
                          "props": Object {
                            "children": <span
                              className=""
                            >
                              Remove
                            </span>,
                            "className": "menuItem",
                            "onClick": [Function],
                            "selected": false,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Remove",
                              "className": "",
                            },
                            "ref": null,
                            "rendered": "Remove",
                            "type": "span",
                          },
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": Symbol(react.fragment),
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "classes": "dotsIcon",
                      "name": "dotsIcon",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <IconWrapper
                          classes="reportIcon"
                          name="check"
                          onClick={[Function]}
                        />,
                        false,
                      ],
                      "className": "reportBlock",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "classes": "reportIcon",
                          "name": "check",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      false,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              false,
              false,
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="value"
                style={
                  Object {
                    "width": "0%",
                  }
                }
              />,
              "className": "progressBar",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "value",
                "style": Object {
                  "width": "0%",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
          "legacyContextMode": "parent",
          "lifecycles": Object {
            "componentDidUpdate": Object {
              "onSetState": true,
            },
            "getChildContext": Object {
              "calledByRenderer": false,
            },
            "getDerivedStateFromError": true,
            "getDerivedStateFromProps": Object {
              "hasShouldComponentUpdateBug": false,
            },
            "getSnapshotBeforeUpdate": true,
            "setState": Object {
              "skipsComponentDidUpdateOnNullish": true,
            },
          },
        },
      },
      Symbol(enzyme.__providerValues__): undefined,
    },
    Symbol(enzyme.__providerValues__): Map {},
    Symbol(enzyme.__childContext__): null,
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <IconWrapper
        classes="playPauseIcon notOutdatedIcon"
        name="playIcon"
      />,
      "className": "activateButton",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": "planning-false",
      "nodeType": "class",
      "props": Object {
        "classes": "playPauseIcon notOutdatedIcon",
        "name": "playIcon",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <IconWrapper
          classes="playPauseIcon notOutdatedIcon"
          name="playIcon"
        />,
        "className": "activateButton",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "planning-false",
        "nodeType": "class",
        "props": Object {
          "classes": "playPauseIcon notOutdatedIcon",
          "name": "playIcon",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__rootNodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="block"
          >
            <div
              className="activateButton"
              onClick={[Function]}
            >
              <IconWrapper
                classes="playPauseIcon notOutdatedIcon"
                name="playIcon"
              />
            </div>
            <div
              className="content"
            >
              <div
                className="information"
              >
                <div>
                  <div
                    className="title"
                    onClick={[Function]}
                  >
                    <IconWrapper
                      classes="integrationIcon"
                      name="noIcon"
                    />
                    <span>
                      string
                    </span>
                  </div>
                  <div
                    className="subtitle"
                  >
                    <IconWrapper
                      classes="star"
                      name="star"
                      onClick={[Function]}
                    />
                    <span>
                      string
                    </span>
                    <IconWrapper
                      classes="dot"
                      name="fiber_manual_record"
                    />
                    <span>
                      string
                    </span>
                  </div>
                </div>
                <div
                  className="fullTime"
                >
                  <div
                    className="estimBlock"
                  >
                    <React.Fragment>
                      <React.Fragment>
                        <React.Fragment>
                          <p>
                            Estimate: 
                            0m
                          </p>
                          <p>
                            Planned: 
                            1.0h
                          </p>
                        </React.Fragment>
                        <p
                          className="spentTime"
                        >
                          0:0
                        </p>
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="menu"
            >
              <React.Fragment>
                <WithStyles(Menu)
                  PaperProps={
                    Object {
                      "style": Object {
                        "marginTop": 25,
                        "width": 160,
                      },
                    }
                  }
                  anchorEl={null}
                  id="0-menu"
                  onClose={[Function]}
                  open={false}
                >
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Edit
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span>
                      Report
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Remove
                    </span>
                  </WithStyles(MenuItem)>
                </WithStyles(Menu)>
              </React.Fragment>
              <IconWrapper
                classes="dotsIcon"
                name="dotsIcon"
                onClick={[Function]}
              />
              <div
                className="reportBlock"
              >
                <IconWrapper
                  classes="reportIcon"
                  name="check"
                  onClick={[Function]}
                />
              </div>
            </div>
          </div>,
          <div
            className="progressBar"
          >
            <div
              className="value"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="activateButton"
                onClick={[Function]}
              >
                <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />
              </div>,
              <div
                className="content"
              >
                <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              </div>,
              <div
                className="menu"
              >
                <React.Fragment>
                  <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>
                </React.Fragment>
                <IconWrapper
                  classes="dotsIcon"
                  name="dotsIcon"
                  onClick={[Function]}
                />
                <div
                  className="reportBlock"
                >
                  <IconWrapper
                    classes="reportIcon"
                    name="check"
                    onClick={[Function]}
                  />
                </div>
              </div>,
              false,
              false,
              false,
            ],
            "className": "block",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />,
                "className": "activateButton",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "planning-false",
                "nodeType": "class",
                "props": Object {
                  "classes": "playPauseIcon notOutdatedIcon",
                  "name": "playIcon",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <React.Fragment>
                            <p>
                              Estimate: 
                              0m
                            </p>
                            <p>
                              Planned: 
                              1.0h
                            </p>
                          </React.Fragment>
                          <p
                            className="spentTime"
                          >
                            0:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>,
                "className": "content",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      <div
                        className="title"
                        onClick={[Function]}
                      >
                        <IconWrapper
                          classes="integrationIcon"
                          name="noIcon"
                        />
                        <span>
                          string
                        </span>
                      </div>
                      <div
                        className="subtitle"
                      >
                        <IconWrapper
                          classes="star"
                          name="star"
                          onClick={[Function]}
                        />
                        <span>
                          string
                        </span>
                        <IconWrapper
                          classes="dot"
                          name="fiber_manual_record"
                        />
                        <span>
                          string
                        </span>
                      </div>
                    </div>,
                    <div
                      className="fullTime"
                    >
                      <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>,
                  ],
                  "className": "information",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="title"
                          onClick={[Function]}
                        >
                          <IconWrapper
                            classes="integrationIcon"
                            name="noIcon"
                          />
                          <span>
                            string
                          </span>
                        </div>,
                        <div
                          className="subtitle"
                        >
                          <IconWrapper
                            classes="star"
                            name="star"
                            onClick={[Function]}
                          />
                          <span>
                            string
                          </span>
                          <IconWrapper
                            classes="dot"
                            name="fiber_manual_record"
                          />
                          <span>
                            string
                          </span>
                        </div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <IconWrapper
                              classes="integrationIcon"
                              name="noIcon"
                            />,
                            <span>
                              string
                            </span>,
                          ],
                          "className": "title",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "integrationIcon",
                              "name": "noIcon",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <IconWrapper
                              classes="star"
                              name="star"
                              onClick={[Function]}
                            />,
                            <span>
                              string
                            </span>,
                            <IconWrapper
                              classes="dot"
                              name="fiber_manual_record"
                            />,
                            <span>
                              string
                            </span>,
                          ],
                          "className": "subtitle",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "star",
                              "name": "star",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "dot",
                              "name": "fiber_manual_record",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>,
                      "className": "fullTime",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <React.Fragment>
                          <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>,
                        "className": "estimBlock",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <React.Fragment>
                            <React.Fragment>
                              <p>
                                Estimate: 
                                0m
                              </p>
                              <p>
                                Planned: 
                                1.0h
                              </p>
                            </React.Fragment>
                            <p
                              className="spentTime"
                            >
                              0:0
                            </p>
                          </React.Fragment>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": Array [
                              <React.Fragment>
                                <p>
                                  Estimate: 
                                  0m
                                </p>
                                <p>
                                  Planned: 
                                  1.0h
                                </p>
                              </React.Fragment>,
                              <p
                                className="spentTime"
                              >
                                0:0
                              </p>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": Array [
                                  <p>
                                    Estimate: 
                                    0m
                                  </p>,
                                  <p>
                                    Planned: 
                                    1.0h
                                  </p>,
                                ],
                              },
                              "ref": null,
                              "rendered": Array [
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": Array [
                                      "Estimate: ",
                                      "0m",
                                    ],
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "Estimate: ",
                                    "0m",
                                  ],
                                  "type": "p",
                                },
                                Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "host",
                                  "props": Object {
                                    "children": Array [
                                      "Planned: ",
                                      "1.0h",
                                    ],
                                  },
                                  "ref": null,
                                  "rendered": Array [
                                    "Planned: ",
                                    "1.0h",
                                  ],
                                  "type": "p",
                                },
                              ],
                              "type": Symbol(react.fragment),
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "0:0",
                                "className": "spentTime",
                              },
                              "ref": null,
                              "rendered": "0:0",
                              "type": "p",
                            },
                          ],
                          "type": Symbol(react.fragment),
                        },
                        "type": Symbol(react.fragment),
                      },
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <React.Fragment>
                    <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>
                  </React.Fragment>,
                  <IconWrapper
                    classes="dotsIcon"
                    name="dotsIcon"
                    onClick={[Function]}
                  />,
                  <div
                    className="reportBlock"
                  >
                    <IconWrapper
                      classes="reportIcon"
                      name="check"
                      onClick={[Function]}
                    />
                  </div>,
                ],
                "className": "menu",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "PaperProps": Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      },
                      "anchorEl": null,
                      "children": Array [
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Edit
                          </span>
                        </WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span>
                            Report
                          </span>
                        </WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Remove
                          </span>
                        </WithStyles(MenuItem)>,
                      ],
                      "id": "0-menu",
                      "onClose": [Function],
                      "open": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "edit",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span
                            className=""
                          >
                            Edit
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Edit",
                            "className": "",
                          },
                          "ref": null,
                          "rendered": "Edit",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "report",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span>
                            Report
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Report",
                          },
                          "ref": null,
                          "rendered": "Report",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "remove",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span
                            className=""
                          >
                            Remove
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Remove",
                            "className": "",
                          },
                          "ref": null,
                          "rendered": "Remove",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": Symbol(react.fragment),
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "classes": "dotsIcon",
                    "name": "dotsIcon",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <IconWrapper
                        classes="reportIcon"
                        name="check"
                        onClick={[Function]}
                      />,
                      false,
                    ],
                    "className": "reportBlock",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "classes": "reportIcon",
                        "name": "check",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    false,
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            false,
            false,
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="value"
              style={
                Object {
                  "width": "0%",
                }
              }
            />,
            "className": "progressBar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "value",
              "style": Object {
                "width": "0%",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__providerValues__): null,
}
`;

exports[`components/planning should render expired, NOT active and NOT outdated planning 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Planning
    bookmarks={Array []}
    planning={
      Object {
        "Active": false,
        "ActivityID": 0,
        "CloseComment": "string",
        "ClosedAt": 0,
        "ColdPlanningID": 0,
        "CreatedAt": 0,
        "Estimation": 3600,
        "FinishState": Array [],
        "ID": 0,
        "IsColdPlanning": true,
        "IsManual": true,
        "IssueDone": 0,
        "IssueDueDate": 0,
        "IssueEstimation": 0,
        "IssueID": "string",
        "IssueSpent": 0,
        "IssueState": Array [],
        "IssueTitle": "string",
        "IssueURL": "string",
        "OpenComment": "string",
        "Outdated": false,
        "PlanningDone": true,
        "ProjectID": "string",
        "Reported": 0,
        "SpentManual": 0,
        "SpentOffline": 0,
        "SpentOnline": 7200,
        "StartedBy": "string",
        "Status": "OPEN",
        "TrackerID": 0,
      }
    }
    startPlanning={[MockFunction]}
    userTrackers={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="block"
        >
          <div
            className="activateButton"
            onClick={[Function]}
          >
            <IconWrapper
              classes="playPauseIcon notOutdatedIcon"
              name="playIcon"
            />
          </div>
          <div
            className="content"
          >
            <div
              className="information"
            >
              <div>
                <div
                  className="title"
                  onClick={[Function]}
                >
                  <IconWrapper
                    classes="integrationIcon"
                    name="noIcon"
                  />
                  <span>
                    string
                  </span>
                </div>
                <div
                  className="subtitle"
                >
                  <IconWrapper
                    classes="star"
                    name="star"
                    onClick={[Function]}
                  />
                  <span>
                    string
                  </span>
                  <IconWrapper
                    classes="dot"
                    name="fiber_manual_record"
                  />
                  <span>
                    string
                  </span>
                </div>
              </div>
              <div
                className="fullTime"
              >
                <div
                  className="estimBlock"
                >
                  <React.Fragment>
                    <React.Fragment>
                      <p
                        className="overSpendTime"
                      >
                        Overdue 
                        1h 0m
                      </p>
                      <p
                        className="spentTime"
                      >
                        2:0
                      </p>
                    </React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </div>
          <div
            className="menu"
          >
            <React.Fragment>
              <WithStyles(Menu)
                PaperProps={
                  Object {
                    "style": Object {
                      "marginTop": 25,
                      "width": 160,
                    },
                  }
                }
                anchorEl={null}
                id="0-menu"
                onClose={[Function]}
                open={false}
              >
                <WithStyles(MenuItem)
                  className="menuItem"
                  onClick={[Function]}
                  selected={false}
                >
                  <span
                    className=""
                  >
                    Edit
                  </span>
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  className="menuItem"
                  onClick={[Function]}
                  selected={false}
                >
                  <span>
                    Report
                  </span>
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  className="menuItem"
                  onClick={[Function]}
                  selected={false}
                >
                  <span
                    className=""
                  >
                    Remove
                  </span>
                </WithStyles(MenuItem)>
              </WithStyles(Menu)>
            </React.Fragment>
            <IconWrapper
              classes="dotsIcon"
              name="dotsIcon"
              onClick={[Function]}
            />
            <div
              className="reportBlock"
            >
              <IconWrapper
                classes="reportIcon"
                name="check"
                onClick={[Function]}
              />
            </div>
          </div>
        </div>,
        <div
          className="progressBar expiredProgressBar"
        >
          <div
            className="value"
            style={
              Object {
                "width": "50%",
              }
            }
          />
        </div>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="activateButton"
              onClick={[Function]}
            >
              <IconWrapper
                classes="playPauseIcon notOutdatedIcon"
                name="playIcon"
              />
            </div>,
            <div
              className="content"
            >
              <div
                className="information"
              >
                <div>
                  <div
                    className="title"
                    onClick={[Function]}
                  >
                    <IconWrapper
                      classes="integrationIcon"
                      name="noIcon"
                    />
                    <span>
                      string
                    </span>
                  </div>
                  <div
                    className="subtitle"
                  >
                    <IconWrapper
                      classes="star"
                      name="star"
                      onClick={[Function]}
                    />
                    <span>
                      string
                    </span>
                    <IconWrapper
                      classes="dot"
                      name="fiber_manual_record"
                    />
                    <span>
                      string
                    </span>
                  </div>
                </div>
                <div
                  className="fullTime"
                >
                  <div
                    className="estimBlock"
                  >
                    <React.Fragment>
                      <React.Fragment>
                        <p
                          className="overSpendTime"
                        >
                          Overdue 
                          1h 0m
                        </p>
                        <p
                          className="spentTime"
                        >
                          2:0
                        </p>
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>,
            <div
              className="menu"
            >
              <React.Fragment>
                <WithStyles(Menu)
                  PaperProps={
                    Object {
                      "style": Object {
                        "marginTop": 25,
                        "width": 160,
                      },
                    }
                  }
                  anchorEl={null}
                  id="0-menu"
                  onClose={[Function]}
                  open={false}
                >
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Edit
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span>
                      Report
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Remove
                    </span>
                  </WithStyles(MenuItem)>
                </WithStyles(Menu)>
              </React.Fragment>
              <IconWrapper
                classes="dotsIcon"
                name="dotsIcon"
                onClick={[Function]}
              />
              <div
                className="reportBlock"
              >
                <IconWrapper
                  classes="reportIcon"
                  name="check"
                  onClick={[Function]}
                />
              </div>
            </div>,
            false,
            false,
            false,
          ],
          "className": "block",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <IconWrapper
                classes="playPauseIcon notOutdatedIcon"
                name="playIcon"
              />,
              "className": "activateButton",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": "planning-false",
              "nodeType": "class",
              "props": Object {
                "classes": "playPauseIcon notOutdatedIcon",
                "name": "playIcon",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="information"
              >
                <div>
                  <div
                    className="title"
                    onClick={[Function]}
                  >
                    <IconWrapper
                      classes="integrationIcon"
                      name="noIcon"
                    />
                    <span>
                      string
                    </span>
                  </div>
                  <div
                    className="subtitle"
                  >
                    <IconWrapper
                      classes="star"
                      name="star"
                      onClick={[Function]}
                    />
                    <span>
                      string
                    </span>
                    <IconWrapper
                      classes="dot"
                      name="fiber_manual_record"
                    />
                    <span>
                      string
                    </span>
                  </div>
                </div>
                <div
                  className="fullTime"
                >
                  <div
                    className="estimBlock"
                  >
                    <React.Fragment>
                      <React.Fragment>
                        <p
                          className="overSpendTime"
                        >
                          Overdue 
                          1h 0m
                        </p>
                        <p
                          className="spentTime"
                        >
                          2:0
                        </p>
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>,
              "className": "content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>,
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <p
                            className="overSpendTime"
                          >
                            Overdue 
                            1h 0m
                          </p>
                          <p
                            className="spentTime"
                          >
                            2:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>,
                ],
                "className": "information",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="title"
                        onClick={[Function]}
                      >
                        <IconWrapper
                          classes="integrationIcon"
                          name="noIcon"
                        />
                        <span>
                          string
                        </span>
                      </div>,
                      <div
                        className="subtitle"
                      >
                        <IconWrapper
                          classes="star"
                          name="star"
                          onClick={[Function]}
                        />
                        <span>
                          string
                        </span>
                        <IconWrapper
                          classes="dot"
                          name="fiber_manual_record"
                        />
                        <span>
                          string
                        </span>
                      </div>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <IconWrapper
                            classes="integrationIcon"
                            name="noIcon"
                          />,
                          <span>
                            string
                          </span>,
                        ],
                        "className": "title",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "integrationIcon",
                            "name": "noIcon",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "string",
                          },
                          "ref": null,
                          "rendered": "string",
                          "type": "span",
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <IconWrapper
                            classes="star"
                            name="star"
                            onClick={[Function]}
                          />,
                          <span>
                            string
                          </span>,
                          <IconWrapper
                            classes="dot"
                            name="fiber_manual_record"
                          />,
                          <span>
                            string
                          </span>,
                        ],
                        "className": "subtitle",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "star",
                            "name": "star",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "string",
                          },
                          "ref": null,
                          "rendered": "string",
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "classes": "dot",
                            "name": "fiber_manual_record",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "string",
                          },
                          "ref": null,
                          "rendered": "string",
                          "type": "span",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <p
                            className="overSpendTime"
                          >
                            Overdue 
                            1h 0m
                          </p>
                          <p
                            className="spentTime"
                          >
                            2:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>,
                    "className": "fullTime",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <React.Fragment>
                        <React.Fragment>
                          <p
                            className="overSpendTime"
                          >
                            Overdue 
                            1h 0m
                          </p>
                          <p
                            className="spentTime"
                          >
                            2:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>,
                      "className": "estimBlock",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <React.Fragment>
                          <p
                            className="overSpendTime"
                          >
                            Overdue 
                            1h 0m
                          </p>
                          <p
                            className="spentTime"
                          >
                            2:0
                          </p>
                        </React.Fragment>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            <p
                              className="overSpendTime"
                            >
                              Overdue 
                              1h 0m
                            </p>,
                            <p
                              className="spentTime"
                            >
                              2:0
                            </p>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "Overdue ",
                                "1h 0m",
                              ],
                              "className": "overSpendTime",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Overdue ",
                              "1h 0m",
                            ],
                            "type": "p",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "2:0",
                              "className": "spentTime",
                            },
                            "ref": null,
                            "rendered": "2:0",
                            "type": "p",
                          },
                        ],
                        "type": Symbol(react.fragment),
                      },
                      "type": Symbol(react.fragment),
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <React.Fragment>
                  <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>
                </React.Fragment>,
                <IconWrapper
                  classes="dotsIcon"
                  name="dotsIcon"
                  onClick={[Function]}
                />,
                <div
                  className="reportBlock"
                >
                  <IconWrapper
                    classes="reportIcon"
                    name="check"
                    onClick={[Function]}
                  />
                </div>,
              ],
              "className": "menu",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "PaperProps": Object {
                      "style": Object {
                        "marginTop": 25,
                        "width": 160,
                      },
                    },
                    "anchorEl": null,
                    "children": Array [
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>,
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>,
                    ],
                    "id": "0-menu",
                    "onClose": [Function],
                    "open": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "edit",
                      "nodeType": "class",
                      "props": Object {
                        "children": <span
                          className=""
                        >
                          Edit
                        </span>,
                        "className": "menuItem",
                        "onClick": [Function],
                        "selected": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Edit",
                          "className": "",
                        },
                        "ref": null,
                        "rendered": "Edit",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "report",
                      "nodeType": "class",
                      "props": Object {
                        "children": <span>
                          Report
                        </span>,
                        "className": "menuItem",
                        "onClick": [Function],
                        "selected": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Report",
                        },
                        "ref": null,
                        "rendered": "Report",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "remove",
                      "nodeType": "class",
                      "props": Object {
                        "children": <span
                          className=""
                        >
                          Remove
                        </span>,
                        "className": "menuItem",
                        "onClick": [Function],
                        "selected": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Remove",
                          "className": "",
                        },
                        "ref": null,
                        "rendered": "Remove",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": Symbol(react.fragment),
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "classes": "dotsIcon",
                  "name": "dotsIcon",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <IconWrapper
                      classes="reportIcon"
                      name="check"
                      onClick={[Function]}
                    />,
                    false,
                  ],
                  "className": "reportBlock",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "classes": "reportIcon",
                      "name": "check",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  false,
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          false,
          false,
          false,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="value"
            style={
              Object {
                "width": "50%",
              }
            }
          />,
          "className": "progressBar expiredProgressBar",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "value",
            "style": Object {
              "width": "50%",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="block"
          >
            <div
              className="activateButton"
              onClick={[Function]}
            >
              <IconWrapper
                classes="playPauseIcon notOutdatedIcon"
                name="playIcon"
              />
            </div>
            <div
              className="content"
            >
              <div
                className="information"
              >
                <div>
                  <div
                    className="title"
                    onClick={[Function]}
                  >
                    <IconWrapper
                      classes="integrationIcon"
                      name="noIcon"
                    />
                    <span>
                      string
                    </span>
                  </div>
                  <div
                    className="subtitle"
                  >
                    <IconWrapper
                      classes="star"
                      name="star"
                      onClick={[Function]}
                    />
                    <span>
                      string
                    </span>
                    <IconWrapper
                      classes="dot"
                      name="fiber_manual_record"
                    />
                    <span>
                      string
                    </span>
                  </div>
                </div>
                <div
                  className="fullTime"
                >
                  <div
                    className="estimBlock"
                  >
                    <React.Fragment>
                      <React.Fragment>
                        <p
                          className="overSpendTime"
                        >
                          Overdue 
                          1h 0m
                        </p>
                        <p
                          className="spentTime"
                        >
                          2:0
                        </p>
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="menu"
            >
              <React.Fragment>
                <WithStyles(Menu)
                  PaperProps={
                    Object {
                      "style": Object {
                        "marginTop": 25,
                        "width": 160,
                      },
                    }
                  }
                  anchorEl={null}
                  id="0-menu"
                  onClose={[Function]}
                  open={false}
                >
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Edit
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span>
                      Report
                    </span>
                  </WithStyles(MenuItem)>
                  <WithStyles(MenuItem)
                    className="menuItem"
                    onClick={[Function]}
                    selected={false}
                  >
                    <span
                      className=""
                    >
                      Remove
                    </span>
                  </WithStyles(MenuItem)>
                </WithStyles(Menu)>
              </React.Fragment>
              <IconWrapper
                classes="dotsIcon"
                name="dotsIcon"
                onClick={[Function]}
              />
              <div
                className="reportBlock"
              >
                <IconWrapper
                  classes="reportIcon"
                  name="check"
                  onClick={[Function]}
                />
              </div>
            </div>
          </div>,
          <div
            className="progressBar expiredProgressBar"
          >
            <div
              className="value"
              style={
                Object {
                  "width": "50%",
                }
              }
            />
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="activateButton"
                onClick={[Function]}
              >
                <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />
              </div>,
              <div
                className="content"
              >
                <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <p
                            className="overSpendTime"
                          >
                            Overdue 
                            1h 0m
                          </p>
                          <p
                            className="spentTime"
                          >
                            2:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              </div>,
              <div
                className="menu"
              >
                <React.Fragment>
                  <WithStyles(Menu)
                    PaperProps={
                      Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      }
                    }
                    anchorEl={null}
                    id="0-menu"
                    onClose={[Function]}
                    open={false}
                  >
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Edit
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span>
                        Report
                      </span>
                    </WithStyles(MenuItem)>
                    <WithStyles(MenuItem)
                      className="menuItem"
                      onClick={[Function]}
                      selected={false}
                    >
                      <span
                        className=""
                      >
                        Remove
                      </span>
                    </WithStyles(MenuItem)>
                  </WithStyles(Menu)>
                </React.Fragment>
                <IconWrapper
                  classes="dotsIcon"
                  name="dotsIcon"
                  onClick={[Function]}
                />
                <div
                  className="reportBlock"
                >
                  <IconWrapper
                    classes="reportIcon"
                    name="check"
                    onClick={[Function]}
                  />
                </div>
              </div>,
              false,
              false,
              false,
            ],
            "className": "block",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <IconWrapper
                  classes="playPauseIcon notOutdatedIcon"
                  name="playIcon"
                />,
                "className": "activateButton",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "planning-false",
                "nodeType": "class",
                "props": Object {
                  "classes": "playPauseIcon notOutdatedIcon",
                  "name": "playIcon",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="information"
                >
                  <div>
                    <div
                      className="title"
                      onClick={[Function]}
                    >
                      <IconWrapper
                        classes="integrationIcon"
                        name="noIcon"
                      />
                      <span>
                        string
                      </span>
                    </div>
                    <div
                      className="subtitle"
                    >
                      <IconWrapper
                        classes="star"
                        name="star"
                        onClick={[Function]}
                      />
                      <span>
                        string
                      </span>
                      <IconWrapper
                        classes="dot"
                        name="fiber_manual_record"
                      />
                      <span>
                        string
                      </span>
                    </div>
                  </div>
                  <div
                    className="fullTime"
                  >
                    <div
                      className="estimBlock"
                    >
                      <React.Fragment>
                        <React.Fragment>
                          <p
                            className="overSpendTime"
                          >
                            Overdue 
                            1h 0m
                          </p>
                          <p
                            className="spentTime"
                          >
                            2:0
                          </p>
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>,
                "className": "content",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      <div
                        className="title"
                        onClick={[Function]}
                      >
                        <IconWrapper
                          classes="integrationIcon"
                          name="noIcon"
                        />
                        <span>
                          string
                        </span>
                      </div>
                      <div
                        className="subtitle"
                      >
                        <IconWrapper
                          classes="star"
                          name="star"
                          onClick={[Function]}
                        />
                        <span>
                          string
                        </span>
                        <IconWrapper
                          classes="dot"
                          name="fiber_manual_record"
                        />
                        <span>
                          string
                        </span>
                      </div>
                    </div>,
                    <div
                      className="fullTime"
                    >
                      <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <p
                              className="overSpendTime"
                            >
                              Overdue 
                              1h 0m
                            </p>
                            <p
                              className="spentTime"
                            >
                              2:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>,
                  ],
                  "className": "information",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          className="title"
                          onClick={[Function]}
                        >
                          <IconWrapper
                            classes="integrationIcon"
                            name="noIcon"
                          />
                          <span>
                            string
                          </span>
                        </div>,
                        <div
                          className="subtitle"
                        >
                          <IconWrapper
                            classes="star"
                            name="star"
                            onClick={[Function]}
                          />
                          <span>
                            string
                          </span>
                          <IconWrapper
                            classes="dot"
                            name="fiber_manual_record"
                          />
                          <span>
                            string
                          </span>
                        </div>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <IconWrapper
                              classes="integrationIcon"
                              name="noIcon"
                            />,
                            <span>
                              string
                            </span>,
                          ],
                          "className": "title",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "integrationIcon",
                              "name": "noIcon",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                        ],
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <IconWrapper
                              classes="star"
                              name="star"
                              onClick={[Function]}
                            />,
                            <span>
                              string
                            </span>,
                            <IconWrapper
                              classes="dot"
                              name="fiber_manual_record"
                            />,
                            <span>
                              string
                            </span>,
                          ],
                          "className": "subtitle",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "star",
                              "name": "star",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "classes": "dot",
                              "name": "fiber_manual_record",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "string",
                            },
                            "ref": null,
                            "rendered": "string",
                            "type": "span",
                          },
                        ],
                        "type": "div",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="estimBlock"
                      >
                        <React.Fragment>
                          <React.Fragment>
                            <p
                              className="overSpendTime"
                            >
                              Overdue 
                              1h 0m
                            </p>
                            <p
                              className="spentTime"
                            >
                              2:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>
                      </div>,
                      "className": "fullTime",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <React.Fragment>
                          <React.Fragment>
                            <p
                              className="overSpendTime"
                            >
                              Overdue 
                              1h 0m
                            </p>
                            <p
                              className="spentTime"
                            >
                              2:0
                            </p>
                          </React.Fragment>
                        </React.Fragment>,
                        "className": "estimBlock",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": <React.Fragment>
                            <p
                              className="overSpendTime"
                            >
                              Overdue 
                              1h 0m
                            </p>
                            <p
                              className="spentTime"
                            >
                              2:0
                            </p>
                          </React.Fragment>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": Array [
                              <p
                                className="overSpendTime"
                              >
                                Overdue 
                                1h 0m
                              </p>,
                              <p
                                className="spentTime"
                              >
                                2:0
                              </p>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": Array [
                                  "Overdue ",
                                  "1h 0m",
                                ],
                                "className": "overSpendTime",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Overdue ",
                                "1h 0m",
                              ],
                              "type": "p",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "2:0",
                                "className": "spentTime",
                              },
                              "ref": null,
                              "rendered": "2:0",
                              "type": "p",
                            },
                          ],
                          "type": Symbol(react.fragment),
                        },
                        "type": Symbol(react.fragment),
                      },
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <React.Fragment>
                    <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>
                  </React.Fragment>,
                  <IconWrapper
                    classes="dotsIcon"
                    name="dotsIcon"
                    onClick={[Function]}
                  />,
                  <div
                    className="reportBlock"
                  >
                    <IconWrapper
                      classes="reportIcon"
                      name="check"
                      onClick={[Function]}
                    />
                  </div>,
                ],
                "className": "menu",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <WithStyles(Menu)
                      PaperProps={
                        Object {
                          "style": Object {
                            "marginTop": 25,
                            "width": 160,
                          },
                        }
                      }
                      anchorEl={null}
                      id="0-menu"
                      onClose={[Function]}
                      open={false}
                    >
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Edit
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span>
                          Report
                        </span>
                      </WithStyles(MenuItem)>
                      <WithStyles(MenuItem)
                        className="menuItem"
                        onClick={[Function]}
                        selected={false}
                      >
                        <span
                          className=""
                        >
                          Remove
                        </span>
                      </WithStyles(MenuItem)>
                    </WithStyles(Menu)>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "PaperProps": Object {
                        "style": Object {
                          "marginTop": 25,
                          "width": 160,
                        },
                      },
                      "anchorEl": null,
                      "children": Array [
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Edit
                          </span>
                        </WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span>
                            Report
                          </span>
                        </WithStyles(MenuItem)>,
                        <WithStyles(MenuItem)
                          className="menuItem"
                          onClick={[Function]}
                          selected={false}
                        >
                          <span
                            className=""
                          >
                            Remove
                          </span>
                        </WithStyles(MenuItem)>,
                      ],
                      "id": "0-menu",
                      "onClose": [Function],
                      "open": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "edit",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span
                            className=""
                          >
                            Edit
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Edit",
                            "className": "",
                          },
                          "ref": null,
                          "rendered": "Edit",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "report",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span>
                            Report
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Report",
                          },
                          "ref": null,
                          "rendered": "Report",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "remove",
                        "nodeType": "class",
                        "props": Object {
                          "children": <span
                            className=""
                          >
                            Remove
                          </span>,
                          "className": "menuItem",
                          "onClick": [Function],
                          "selected": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Remove",
                            "className": "",
                          },
                          "ref": null,
                          "rendered": "Remove",
                          "type": "span",
                        },
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": Symbol(react.fragment),
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "classes": "dotsIcon",
                    "name": "dotsIcon",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <IconWrapper
                        classes="reportIcon"
                        name="check"
                        onClick={[Function]}
                      />,
                      false,
                    ],
                    "className": "reportBlock",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "classes": "reportIcon",
                        "name": "check",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    false,
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            false,
            false,
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="value"
              style={
                Object {
                  "width": "50%",
                }
              }
            />,
            "className": "progressBar expiredProgressBar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "value",
              "style": Object {
                "width": "50%",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
